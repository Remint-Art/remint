"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./data/fetch/fetchAlchemy.js":
/*!************************************!*\
  !*** ./data/fetch/fetchAlchemy.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"fetchAlchemy\": function() { return /* binding */ fetchAlchemy; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _Users_diogosousa_dev_ethHackaton22_remint_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/regenerator-runtime/runtime.js */ \"./node_modules/next/dist/compiled/regenerator-runtime/runtime.js\");\n/* harmony import */ var _Users_diogosousa_dev_ethHackaton22_remint_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_diogosousa_dev_ethHackaton22_remint_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\nvar ALCHEMY_KEY = \"\";\nvar ALCHEMY_URL = \"https://eth-mainnet.g.alchemy.com/nft/v2/\";\nvar options = {\n    method: \"GET\",\n    headers: {\n        accept: \"application/json\"\n    }\n};\nvar fetchAlchemy = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_Users_diogosousa_dev_ethHackaton22_remint_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee() {\n        var mockedCollections, parsedNfts, requests, response;\n        return _Users_diogosousa_dev_ethHackaton22_remint_frontend_node_modules_next_dist_compiled_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n            while(1)switch(_ctx.prev = _ctx.next){\n                case 0:\n                    mockedCollections = [\n                        {\n                            contractAddress: \"0x1894852504288219fa835Af44528571d543958a1\",\n                            nfts: [\n                                {\n                                    token_id: \"0\"\n                                },\n                                {\n                                    token_id: \"1\"\n                                },\n                                {\n                                    token_id: \"2\"\n                                },\n                                {\n                                    token_id: \"3\"\n                                },\n                                {\n                                    token_id: \"4\"\n                                }, \n                            ]\n                        },\n                        {\n                            contractAddress: \"0x9eaAf84Ca9878736D0d7329f860D574a8E83551C\",\n                            nfts: [\n                                {\n                                    token_id: \"0\"\n                                },\n                                {\n                                    token_id: \"1\"\n                                },\n                                {\n                                    token_id: \"2\"\n                                },\n                                {\n                                    token_id: \"3\"\n                                },\n                                {\n                                    token_id: \"4\"\n                                }, \n                            ]\n                        },\n                        {\n                            contractAddress: \"0x0b0DfD106B18aE0274eE589235dE66363a63c232\",\n                            nfts: [\n                                {\n                                    token_id: \"0\"\n                                },\n                                {\n                                    token_id: \"1\"\n                                },\n                                {\n                                    token_id: \"2\"\n                                },\n                                {\n                                    token_id: \"3\"\n                                },\n                                {\n                                    token_id: \"4\"\n                                }, \n                            ]\n                        }, \n                    ];\n                    parsedNfts = mockedCollections.reduce(function(acc, cur) {\n                        if (!acc.includes(cur.contractAddress)) {\n                            cur.nfts.forEach(function(element) {\n                                return acc.push({\n                                    contractAddress: cur.contractAddress,\n                                    tokenId: element.token_id\n                                });\n                            });\n                        }\n                        return acc;\n                    }, []);\n                    requests = parsedNfts.map(function(nft) {\n                        return fetch(\"\".concat(ALCHEMY_URL).concat(ALCHEMY_KEY, \"/getNFTMetadata?contractAddress=\").concat(nft.contractAddress, \"&tokenId=\").concat(nft.tokenId, \"&refreshCache=false\"), options).then(function(response) {\n                            return response.json();\n                        });\n                    });\n                    _ctx.next = 5;\n                    return Promise.all(requests);\n                case 5:\n                    response = _ctx.sent;\n                    return _ctx.abrupt(\"return\", response);\n                case 7:\n                case \"end\":\n                    return _ctx.stop();\n            }\n        }, _callee);\n    }));\n    return function fetchAlchemy() {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUF0Q0MsUUFBUSxZQUE4QjtpREFFckNBLFFBQVE7Ozs7OztLQUNoQjtvQkF6RFlKLFlBQVk7OztHQXlEeEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9kYXRhL2ZldGNoL2ZldGNoQWxjaGVteS5qcz82NjIxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFMQ0hFTVlfS0VZID0gJyc7XG5jb25zdCBBTENIRU1ZX1VSTCA9ICdodHRwczovL2V0aC1tYWlubmV0LmcuYWxjaGVteS5jb20vbmZ0L3YyLyc7XG5jb25zdCBvcHRpb25zID0geyBtZXRob2Q6ICdHRVQnLCBoZWFkZXJzOiB7IGFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nIH0gfTtcblxuZXhwb3J0IGNvbnN0IGZldGNoQWxjaGVteSA9IGFzeW5jICgpID0+IHtcbiAgY29uc3QgbW9ja2VkQ29sbGVjdGlvbnMgPSBbXG4gICAge1xuICAgICAgY29udHJhY3RBZGRyZXNzOiAnMHgxODk0ODUyNTA0Mjg4MjE5ZmE4MzVBZjQ0NTI4NTcxZDU0Mzk1OGExJyxcbiAgICAgIG5mdHM6IFtcbiAgICAgICAgeyB0b2tlbl9pZDogJzAnIH0sXG4gICAgICAgIHsgdG9rZW5faWQ6ICcxJyB9LFxuICAgICAgICB7IHRva2VuX2lkOiAnMicgfSxcbiAgICAgICAgeyB0b2tlbl9pZDogJzMnIH0sXG4gICAgICAgIHsgdG9rZW5faWQ6ICc0JyB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGNvbnRyYWN0QWRkcmVzczogJzB4OWVhQWY4NENhOTg3ODczNkQwZDczMjlmODYwRDU3NGE4RTgzNTUxQycsXG4gICAgICBuZnRzOiBbXG4gICAgICAgIHsgdG9rZW5faWQ6ICcwJyB9LFxuICAgICAgICB7IHRva2VuX2lkOiAnMScgfSxcbiAgICAgICAgeyB0b2tlbl9pZDogJzInIH0sXG4gICAgICAgIHsgdG9rZW5faWQ6ICczJyB9LFxuICAgICAgICB7IHRva2VuX2lkOiAnNCcgfSxcbiAgICAgIF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBjb250cmFjdEFkZHJlc3M6ICcweDBiMERmRDEwNkIxOGFFMDI3NGVFNTg5MjM1ZEU2NjM2M2E2M2MyMzInLFxuICAgICAgbmZ0czogW1xuICAgICAgICB7IHRva2VuX2lkOiAnMCcgfSxcbiAgICAgICAgeyB0b2tlbl9pZDogJzEnIH0sXG4gICAgICAgIHsgdG9rZW5faWQ6ICcyJyB9LFxuICAgICAgICB7IHRva2VuX2lkOiAnMycgfSxcbiAgICAgICAgeyB0b2tlbl9pZDogJzQnIH0sXG4gICAgICBdLFxuICAgIH0sXG4gIF07XG5cbiAgY29uc3QgcGFyc2VkTmZ0cyA9IG1vY2tlZENvbGxlY3Rpb25zLnJlZHVjZSgoYWNjLCBjdXIpID0+IHtcbiAgICBpZiAoIWFjYy5pbmNsdWRlcyhjdXIuY29udHJhY3RBZGRyZXNzKSkge1xuICAgICAgY3VyLm5mdHMuZm9yRWFjaCgoZWxlbWVudCkgPT5cbiAgICAgICAgYWNjLnB1c2goe1xuICAgICAgICAgIGNvbnRyYWN0QWRkcmVzczogY3VyLmNvbnRyYWN0QWRkcmVzcyxcbiAgICAgICAgICB0b2tlbklkOiBlbGVtZW50LnRva2VuX2lkLFxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWNjO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgcmVxdWVzdHMgPSBwYXJzZWROZnRzLm1hcCgobmZ0KSA9PlxuICAgIGZldGNoKFxuICAgICAgYCR7QUxDSEVNWV9VUkx9JHtBTENIRU1ZX0tFWX0vZ2V0TkZUTWV0YWRhdGE/Y29udHJhY3RBZGRyZXNzPSR7bmZ0LmNvbnRyYWN0QWRkcmVzc30mdG9rZW5JZD0ke25mdC50b2tlbklkfSZyZWZyZXNoQ2FjaGU9ZmFsc2VgLFxuICAgICAgb3B0aW9uc1xuICAgICkudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgKTtcblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IFByb21pc2UuYWxsKHJlcXVlc3RzKTtcblxuICByZXR1cm4gcmVzcG9uc2U7XG59O1xuIl0sIm5hbWVzIjpbIkFMQ0hFTVlfS0VZIiwiQUxDSEVNWV9VUkwiLCJvcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsImFjY2VwdCIsImZldGNoQWxjaGVteSIsIm1vY2tlZENvbGxlY3Rpb25zIiwicGFyc2VkTmZ0cyIsInJlcXVlc3RzIiwicmVzcG9uc2UiLCJjb250cmFjdEFkZHJlc3MiLCJuZnRzIiwidG9rZW5faWQiLCJyZWR1Y2UiLCJhY2MiLCJjdXIiLCJpbmNsdWRlcyIsImZvckVhY2giLCJlbGVtZW50IiwicHVzaCIsInRva2VuSWQiLCJtYXAiLCJuZnQiLCJmZXRjaCIsInRoZW4iLCJqc29uIiwiUHJvbWlzZSIsImFsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./data/fetch/fetchAlchemy.js\n"));

/***/ })

});